{"ast":null,"code":"function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport _ from 'lodash';\nimport React, { useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { Dimensions, FlatList, I18nManager, Image, Keyboard, Modal, StyleSheet, Text, TouchableHighlight, TouchableWithoutFeedback, View, StatusBar } from 'react-native';\nimport { useDetectDevice } from '../../toolkits';\nimport { useDeviceOrientation } from '../../useDeviceOrientation';\nimport CInput from '../TextInput';\nimport { styles } from './styles';\nconst {\n  isTablet\n} = useDetectDevice;\nconst ic_down = require('../../assets/down.png');\nconst statusBarHeight = StatusBar.currentHeight || 0;\nconst DropdownComponent = /*#__PURE__*/React.forwardRef((props, currentRef) => {\n  const orientation = useDeviceOrientation();\n  const {\n    testID,\n    itemTestIDField,\n    onChange,\n    style = {},\n    containerStyle,\n    placeholderStyle,\n    selectedTextStyle,\n    itemContainerStyle,\n    itemTextStyle,\n    inputSearchStyle,\n    iconStyle,\n    selectedTextProps = {},\n    data = [],\n    labelField,\n    valueField,\n    searchField,\n    value,\n    activeColor = '#F6F7F8',\n    fontFamily,\n    iconColor = 'gray',\n    searchPlaceholder,\n    placeholder = 'Select item',\n    search = false,\n    maxHeight = 340,\n    minHeight = 0,\n    disable = false,\n    keyboardAvoiding = true,\n    inverted = true,\n    renderLeftIcon,\n    renderRightIcon,\n    renderItem,\n    renderInputSearch,\n    onFocus,\n    onBlur,\n    autoScroll = true,\n    showsVerticalScrollIndicator = true,\n    dropdownPosition = 'auto',\n    flatListProps,\n    searchQuery,\n    backgroundColor,\n    onChangeText,\n    confirmSelectItem,\n    onConfirmSelectItem,\n    accessibilityLabel,\n    itemAccessibilityLabelField,\n    mode = 'default'\n  } = props;\n  const ref = useRef(null);\n  const refList = useRef(null);\n  const [visible, setVisible] = useState(false);\n  const [currentValue, setCurrentValue] = useState(null);\n  const [listData, setListData] = useState(data);\n  const [position, setPosition] = useState();\n  const [keyboardHeight, setKeyboardHeight] = useState(0);\n  const [searchText, setSearchText] = useState('');\n  const {\n    width: W,\n    height: H\n  } = Dimensions.get('window');\n  const styleContainerVertical = useMemo(() => {\n    return {\n      backgroundColor: 'rgba(0,0,0,0.1)',\n      alignItems: 'center'\n    };\n  }, []);\n  const styleHorizontal = useMemo(() => {\n    return {\n      width: orientation === 'LANDSCAPE' ? W / 2 : '100%',\n      alignSelf: 'center'\n    };\n  }, [W, orientation]);\n  useImperativeHandle(currentRef, () => {\n    return {\n      open: eventOpen,\n      close: eventClose\n    };\n  });\n  useEffect(() => {\n    setListData([...data]);\n    if (searchText) {\n      onSearch(searchText);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data, searchText]);\n  const eventOpen = () => {\n    if (!disable) {\n      setVisible(true);\n      if (onFocus) {\n        onFocus();\n      }\n      if (searchText.length > 0) {\n        onSearch(searchText);\n      }\n      scrollIndex();\n    }\n  };\n  const eventClose = useCallback(() => {\n    if (!disable) {\n      setVisible(false);\n      if (onBlur) {\n        onBlur();\n      }\n    }\n  }, [disable, onBlur]);\n  const font = useCallback(() => {\n    if (fontFamily) {\n      return {\n        fontFamily: fontFamily\n      };\n    } else {\n      return {};\n    }\n  }, [fontFamily]);\n  const _measure = useCallback(() => {\n    if (ref && ref !== null && ref !== void 0 && ref.current) {\n      ref.current.measureInWindow((pageX, pageY, width, height) => {\n        const isFull = isTablet ? false : mode === 'modal' || orientation === 'LANDSCAPE';\n        const top = isFull ? 20 : height + pageY + 2;\n        const bottom = H - top + height;\n        const left = I18nManager.isRTL ? W - width - pageX : pageX;\n        setPosition({\n          isFull,\n          width: Math.floor(width),\n          top: Math.floor(top + statusBarHeight),\n          bottom: Math.floor(bottom - statusBarHeight),\n          left: Math.floor(left),\n          height: Math.floor(height)\n        });\n      });\n    }\n  }, [H, W, orientation, mode]);\n  const onKeyboardDidShow = useCallback(e => {\n    _measure();\n    setKeyboardHeight(e.endCoordinates.height);\n  }, [_measure]);\n  const onKeyboardDidHide = useCallback(() => {\n    setKeyboardHeight(0);\n    _measure();\n  }, [_measure]);\n  useEffect(() => {\n    const susbcriptionKeyboardDidShow = Keyboard.addListener('keyboardDidShow', onKeyboardDidShow);\n    const susbcriptionKeyboardDidHide = Keyboard.addListener('keyboardDidHide', onKeyboardDidHide);\n    return () => {\n      if (typeof (susbcriptionKeyboardDidShow === null || susbcriptionKeyboardDidShow === void 0 ? void 0 : susbcriptionKeyboardDidShow.remove) === 'function') {\n        susbcriptionKeyboardDidShow.remove();\n      }\n      if (typeof (susbcriptionKeyboardDidHide === null || susbcriptionKeyboardDidHide === void 0 ? void 0 : susbcriptionKeyboardDidHide.remove) === 'function') {\n        susbcriptionKeyboardDidHide.remove();\n      }\n    };\n  }, [onKeyboardDidHide, onKeyboardDidShow]);\n  const getValue = useCallback(() => {\n    const defaultValue = typeof value === 'object' ? _.get(value, valueField) : value;\n    const getItem = data.filter(e => _.isEqual(defaultValue, _.get(e, valueField)));\n    if (getItem.length > 0) {\n      setCurrentValue(getItem[0]);\n    } else {\n      setCurrentValue(null);\n    }\n  }, [data, value, valueField]);\n  useEffect(() => {\n    getValue();\n  }, [value, data, getValue]);\n  const scrollIndex = useCallback(() => {\n    if (autoScroll && data.length > 0 && listData.length === data.length) {\n      setTimeout(() => {\n        if (refList && refList !== null && refList !== void 0 && refList.current) {\n          const defaultValue = typeof value === 'object' ? _.get(value, valueField) : value;\n          const index = _.findIndex(listData, e => _.isEqual(defaultValue, _.get(e, valueField)));\n          if (index > -1 && index <= listData.length - 1) {\n            var _refList$current;\n            refList === null || refList === void 0 ? void 0 : (_refList$current = refList.current) === null || _refList$current === void 0 ? void 0 : _refList$current.scrollToIndex({\n              index: index,\n              animated: false\n            });\n          }\n        }\n      }, 200);\n    }\n  }, [autoScroll, data.length, listData, value, valueField]);\n  const showOrClose = useCallback(() => {\n    if (!disable) {\n      if (keyboardHeight > 0 && visible) {\n        return Keyboard.dismiss();\n      }\n      _measure();\n      setVisible(!visible);\n      setListData(data);\n      if (!visible) {\n        if (onFocus) {\n          onFocus();\n        }\n      } else {\n        if (onBlur) {\n          onBlur();\n        }\n      }\n      if (searchText.length > 0) {\n        onSearch(searchText);\n      }\n      scrollIndex();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [disable, keyboardHeight, visible, _measure, data, searchText, scrollIndex, onFocus, onBlur]);\n  const onSearch = useCallback(text => {\n    if (text.length > 0) {\n      const defaultFilterFunction = e => {\n        var _$get;\n        const item = (_$get = _.get(e, searchField || labelField)) === null || _$get === void 0 ? void 0 : _$get.toLowerCase().replace(' ', '').normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n        const key = text.toLowerCase().replace(' ', '').normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n        return item.indexOf(key) >= 0;\n      };\n      const propSearchFunction = e => {\n        const labelText = _.get(e, searchField || labelField);\n        return searchQuery === null || searchQuery === void 0 ? void 0 : searchQuery(text, labelText);\n      };\n      const dataSearch = data.filter(searchQuery ? propSearchFunction : defaultFilterFunction);\n      setListData(dataSearch);\n    } else {\n      setListData(data);\n    }\n  }, [data, searchField, labelField, searchQuery]);\n  const onSelect = useCallback(item => {\n    if (confirmSelectItem && onConfirmSelectItem) {\n      return onConfirmSelectItem(item);\n    }\n    if (onChangeText) {\n      setSearchText('');\n      onChangeText('');\n    }\n    onSearch('');\n    setCurrentValue(item);\n    onChange(item);\n    eventClose();\n  }, [confirmSelectItem, eventClose, onChange, onChangeText, onConfirmSelectItem, onSearch]);\n  const _renderDropdown = () => {\n    const isSelected = currentValue && _.get(currentValue, valueField);\n    return /*#__PURE__*/React.createElement(TouchableWithoutFeedback, {\n      testID: testID,\n      accessible: !!accessibilityLabel,\n      accessibilityLabel: accessibilityLabel,\n      onPress: showOrClose\n    }, /*#__PURE__*/React.createElement(View, {\n      style: styles.dropdown\n    }, renderLeftIcon === null || renderLeftIcon === void 0 ? void 0 : renderLeftIcon(visible), /*#__PURE__*/React.createElement(Text, _extends({\n      style: [styles.textItem, isSelected !== null ? selectedTextStyle : placeholderStyle, font()]\n    }, selectedTextProps), isSelected !== null ? _.get(currentValue, labelField) : placeholder), renderRightIcon ? renderRightIcon(visible) : /*#__PURE__*/React.createElement(Image, {\n      source: ic_down,\n      style: StyleSheet.flatten([styles.icon, {\n        tintColor: iconColor\n      }, iconStyle])\n    })));\n  };\n  const _renderItem = useCallback(_ref => {\n    let {\n      item,\n      index\n    } = _ref;\n    const isSelected = currentValue && _.get(currentValue, valueField);\n    const selected = _.isEqual(_.get(item, valueField), isSelected);\n    _.assign(item, {\n      _index: index\n    });\n    return /*#__PURE__*/React.createElement(TouchableHighlight, {\n      key: index.toString(),\n      testID: _.get(item, itemTestIDField || labelField),\n      accessible: !!accessibilityLabel,\n      accessibilityLabel: _.get(item, itemAccessibilityLabelField || labelField),\n      underlayColor: activeColor,\n      onPress: () => onSelect(item)\n    }, /*#__PURE__*/React.createElement(View, {\n      style: StyleSheet.flatten([itemContainerStyle, selected && {\n        backgroundColor: activeColor\n      }])\n    }, renderItem ? renderItem(item, selected) : /*#__PURE__*/React.createElement(View, {\n      style: styles.item\n    }, /*#__PURE__*/React.createElement(Text, {\n      style: StyleSheet.flatten([styles.textItem, itemTextStyle, font()])\n    }, _.get(item, labelField)))));\n  }, [accessibilityLabel, activeColor, currentValue, font, itemAccessibilityLabelField, itemContainerStyle, itemTestIDField, itemTextStyle, labelField, onSelect, renderItem, valueField]);\n  const renderSearch = useCallback(() => {\n    if (search) {\n      if (renderInputSearch) {\n        return renderInputSearch(text => {\n          if (onChangeText) {\n            setSearchText(text);\n            onChangeText(text);\n          }\n          onSearch(text);\n        });\n      } else {\n        return /*#__PURE__*/React.createElement(CInput, {\n          testID: testID + ' input',\n          accessibilityLabel: accessibilityLabel + ' input',\n          style: [styles.input, inputSearchStyle],\n          inputStyle: [inputSearchStyle, font()],\n          value: searchText,\n          autoCorrect: false,\n          placeholder: searchPlaceholder,\n          onChangeText: e => {\n            if (onChangeText) {\n              setSearchText(e);\n              onChangeText(e);\n            }\n            onSearch(e);\n          },\n          placeholderTextColor: \"gray\",\n          iconStyle: [{\n            tintColor: iconColor\n          }, iconStyle]\n        });\n      }\n    }\n    return null;\n  }, [accessibilityLabel, font, iconColor, iconStyle, inputSearchStyle, onChangeText, onSearch, renderInputSearch, search, searchPlaceholder, testID, searchText]);\n  const _renderList = useCallback(isTopPosition => {\n    const isInverted = !inverted ? false : isTopPosition;\n    const _renderListHelper = () => {\n      return /*#__PURE__*/React.createElement(FlatList, _extends({\n        testID: testID + ' flatlist',\n        accessibilityLabel: accessibilityLabel + ' flatlist'\n      }, flatListProps, {\n        keyboardShouldPersistTaps: \"handled\",\n        ref: refList,\n        onScrollToIndexFailed: scrollIndex,\n        data: listData,\n        inverted: isTopPosition ? inverted : false,\n        renderItem: _renderItem,\n        keyExtractor: (_item, index) => index.toString(),\n        showsVerticalScrollIndicator: showsVerticalScrollIndicator\n      }));\n    };\n    return /*#__PURE__*/React.createElement(TouchableWithoutFeedback, null, /*#__PURE__*/React.createElement(View, {\n      style: styles.flexShrink\n    }, isInverted && _renderListHelper(), renderSearch(), !isInverted && _renderListHelper()));\n  }, [_renderItem, accessibilityLabel, flatListProps, listData, inverted, renderSearch, scrollIndex, showsVerticalScrollIndicator, testID]);\n  const _renderModal = useCallback(() => {\n    if (visible && position) {\n      const {\n        isFull,\n        width,\n        height,\n        top,\n        bottom,\n        left\n      } = position;\n      const onAutoPosition = () => {\n        if (keyboardHeight > 0) {\n          return bottom < keyboardHeight + height;\n        }\n        return bottom < (search ? 150 : 100);\n      };\n      if (width && top && bottom) {\n        const styleVertical = {\n          left: left,\n          maxHeight: maxHeight,\n          minHeight: minHeight\n        };\n        const isTopPosition = dropdownPosition === 'auto' ? onAutoPosition() : dropdownPosition === 'top';\n        let keyboardStyle = {};\n        let extendHeight = !isTopPosition ? top : bottom;\n        if (keyboardAvoiding && keyboardHeight > 0 && isTopPosition && dropdownPosition === 'auto') {\n          extendHeight = keyboardHeight;\n        }\n        return /*#__PURE__*/React.createElement(Modal, {\n          transparent: true,\n          statusBarTranslucent: true,\n          visible: visible,\n          supportedOrientations: ['landscape', 'portrait'],\n          onRequestClose: showOrClose\n        }, /*#__PURE__*/React.createElement(TouchableWithoutFeedback, {\n          onPress: showOrClose\n        }, /*#__PURE__*/React.createElement(View, {\n          style: StyleSheet.flatten([styles.flex1, isFull && styleContainerVertical, backgroundColor && {\n            backgroundColor: backgroundColor\n          }, keyboardStyle])\n        }, /*#__PURE__*/React.createElement(View, {\n          style: StyleSheet.flatten([styles.flex1, {\n            width\n          }, !isTopPosition ? {\n            paddingTop: extendHeight\n          } : {\n            justifyContent: 'flex-end',\n            paddingBottom: extendHeight\n          }, isFull && styles.fullScreen])\n        }, /*#__PURE__*/React.createElement(View, {\n          style: StyleSheet.flatten([styles.container, isFull ? styleHorizontal : styleVertical, containerStyle])\n        }, _renderList(isTopPosition))))));\n      }\n      return null;\n    }\n    return null;\n  }, [visible, search, position, keyboardHeight, maxHeight, minHeight, dropdownPosition, keyboardAvoiding, showOrClose, styleContainerVertical, backgroundColor, containerStyle, styleHorizontal, _renderList]);\n  return /*#__PURE__*/React.createElement(View, {\n    style: StyleSheet.flatten([styles.mainWrap, style]),\n    ref: ref,\n    onLayout: _measure\n  }, _renderDropdown(), _renderModal());\n});\nexport default DropdownComponent;","map":{"version":3,"names":["_","React","useCallback","useEffect","useImperativeHandle","useMemo","useRef","useState","Dimensions","FlatList","I18nManager","Image","Keyboard","Modal","StyleSheet","Text","TouchableHighlight","TouchableWithoutFeedback","View","StatusBar","useDetectDevice","useDeviceOrientation","CInput","styles","isTablet","ic_down","require","statusBarHeight","currentHeight","DropdownComponent","forwardRef","props","currentRef","orientation","testID","itemTestIDField","onChange","style","containerStyle","placeholderStyle","selectedTextStyle","itemContainerStyle","itemTextStyle","inputSearchStyle","iconStyle","selectedTextProps","data","labelField","valueField","searchField","value","activeColor","fontFamily","iconColor","searchPlaceholder","placeholder","search","maxHeight","minHeight","disable","keyboardAvoiding","inverted","renderLeftIcon","renderRightIcon","renderItem","renderInputSearch","onFocus","onBlur","autoScroll","showsVerticalScrollIndicator","dropdownPosition","flatListProps","searchQuery","backgroundColor","onChangeText","confirmSelectItem","onConfirmSelectItem","accessibilityLabel","itemAccessibilityLabelField","mode","ref","refList","visible","setVisible","currentValue","setCurrentValue","listData","setListData","position","setPosition","keyboardHeight","setKeyboardHeight","searchText","setSearchText","width","W","height","H","get","styleContainerVertical","alignItems","styleHorizontal","alignSelf","open","eventOpen","close","eventClose","onSearch","length","scrollIndex","font","_measure","current","measureInWindow","pageX","pageY","isFull","top","bottom","left","isRTL","Math","floor","onKeyboardDidShow","e","endCoordinates","onKeyboardDidHide","susbcriptionKeyboardDidShow","addListener","susbcriptionKeyboardDidHide","remove","getValue","defaultValue","getItem","filter","isEqual","setTimeout","index","findIndex","_refList$current","scrollToIndex","animated","showOrClose","dismiss","text","defaultFilterFunction","_$get","item","toLowerCase","replace","normalize","key","indexOf","propSearchFunction","labelText","dataSearch","onSelect","_renderDropdown","isSelected","createElement","accessible","onPress","dropdown","_extends","textItem","source","flatten","icon","tintColor","_renderItem","_ref","selected","assign","_index","toString","underlayColor","renderSearch","input","inputStyle","autoCorrect","placeholderTextColor","_renderList","isTopPosition","isInverted","_renderListHelper","keyboardShouldPersistTaps","onScrollToIndexFailed","keyExtractor","_item","flexShrink","_renderModal","onAutoPosition","styleVertical","keyboardStyle","extendHeight","transparent","statusBarTranslucent","supportedOrientations","onRequestClose","flex1","paddingTop","justifyContent","paddingBottom","fullScreen","container","mainWrap","onLayout"],"sources":["C:\\Users\\simra\\travel\\node_modules\\react-native-element-dropdown\\src\\components\\Dropdown\\index.tsx"],"sourcesContent":["import _ from 'lodash';\nimport React, {\n  JSXElementConstructor,\n  ReactElement,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport {\n  Dimensions,\n  FlatList,\n  I18nManager,\n  Image,\n  Keyboard,\n  KeyboardEvent,\n  Modal,\n  StyleSheet,\n  Text,\n  TouchableHighlight,\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n  StatusBar,\n} from 'react-native';\nimport { useDetectDevice } from '../../toolkits';\nimport { useDeviceOrientation } from '../../useDeviceOrientation';\nimport CInput from '../TextInput';\nimport { DropdownProps } from './model';\nimport { styles } from './styles';\n\nconst { isTablet } = useDetectDevice;\nconst ic_down = require('../../assets/down.png');\n\nconst statusBarHeight: number = StatusBar.currentHeight || 0;\n\nconst DropdownComponent: <T>(\n  props: DropdownProps<T>\n) => ReactElement<any, string | JSXElementConstructor<any>> | null =\n  React.forwardRef((props, currentRef) => {\n    const orientation = useDeviceOrientation();\n    const {\n      testID,\n      itemTestIDField,\n      onChange,\n      style = {},\n      containerStyle,\n      placeholderStyle,\n      selectedTextStyle,\n      itemContainerStyle,\n      itemTextStyle,\n      inputSearchStyle,\n      iconStyle,\n      selectedTextProps = {},\n      data = [],\n      labelField,\n      valueField,\n      searchField,\n      value,\n      activeColor = '#F6F7F8',\n      fontFamily,\n      iconColor = 'gray',\n      searchPlaceholder,\n      placeholder = 'Select item',\n      search = false,\n      maxHeight = 340,\n      minHeight = 0,\n      disable = false,\n      keyboardAvoiding = true,\n      inverted = true,\n      renderLeftIcon,\n      renderRightIcon,\n      renderItem,\n      renderInputSearch,\n      onFocus,\n      onBlur,\n      autoScroll = true,\n      showsVerticalScrollIndicator = true,\n      dropdownPosition = 'auto',\n      flatListProps,\n      searchQuery,\n      backgroundColor,\n      onChangeText,\n      confirmSelectItem,\n      onConfirmSelectItem,\n      accessibilityLabel,\n      itemAccessibilityLabelField,\n      mode = 'default',\n    } = props;\n\n    const ref = useRef<View>(null);\n    const refList = useRef<FlatList>(null);\n    const [visible, setVisible] = useState<boolean>(false);\n    const [currentValue, setCurrentValue] = useState<any>(null);\n    const [listData, setListData] = useState<any[]>(data);\n    const [position, setPosition] = useState<any>();\n    const [keyboardHeight, setKeyboardHeight] = useState<number>(0);\n    const [searchText, setSearchText] = useState('');\n\n    const { width: W, height: H } = Dimensions.get('window');\n    const styleContainerVertical: ViewStyle = useMemo(() => {\n      return {\n        backgroundColor: 'rgba(0,0,0,0.1)',\n        alignItems: 'center',\n      };\n    }, []);\n    const styleHorizontal: ViewStyle = useMemo(() => {\n      return {\n        width: orientation === 'LANDSCAPE' ? W / 2 : '100%',\n        alignSelf: 'center',\n      };\n    }, [W, orientation]);\n\n    useImperativeHandle(currentRef, () => {\n      return { open: eventOpen, close: eventClose };\n    });\n\n    useEffect(() => {\n      setListData([...data]);\n      if (searchText) {\n        onSearch(searchText);\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [data, searchText]);\n\n    const eventOpen = () => {\n      if (!disable) {\n        setVisible(true);\n        if (onFocus) {\n          onFocus();\n        }\n\n        if (searchText.length > 0) {\n          onSearch(searchText);\n        }\n        scrollIndex();\n      }\n    };\n\n    const eventClose = useCallback(() => {\n      if (!disable) {\n        setVisible(false);\n        if (onBlur) {\n          onBlur();\n        }\n      }\n    }, [disable, onBlur]);\n\n    const font = useCallback(() => {\n      if (fontFamily) {\n        return {\n          fontFamily: fontFamily,\n        };\n      } else {\n        return {};\n      }\n    }, [fontFamily]);\n\n    const _measure = useCallback(() => {\n      if (ref && ref?.current) {\n        ref.current.measureInWindow((pageX, pageY, width, height) => {\n          const isFull = isTablet\n            ? false\n            : mode === 'modal' || orientation === 'LANDSCAPE';\n          const top = isFull ? 20 : height + pageY + 2;\n          const bottom = H - top + height;\n          const left = I18nManager.isRTL ? W - width - pageX : pageX;\n\n          setPosition({\n            isFull,\n            width: Math.floor(width),\n            top: Math.floor(top + statusBarHeight),\n            bottom: Math.floor(bottom - statusBarHeight),\n            left: Math.floor(left),\n            height: Math.floor(height),\n          });\n        });\n      }\n    }, [H, W, orientation, mode]);\n\n    const onKeyboardDidShow = useCallback(\n      (e: KeyboardEvent) => {\n        _measure();\n        setKeyboardHeight(e.endCoordinates.height);\n      },\n      [_measure]\n    );\n\n    const onKeyboardDidHide = useCallback(() => {\n      setKeyboardHeight(0);\n      _measure();\n    }, [_measure]);\n\n    useEffect(() => {\n      const susbcriptionKeyboardDidShow = Keyboard.addListener(\n        'keyboardDidShow',\n        onKeyboardDidShow\n      );\n      const susbcriptionKeyboardDidHide = Keyboard.addListener(\n        'keyboardDidHide',\n        onKeyboardDidHide\n      );\n\n      return () => {\n        if (typeof susbcriptionKeyboardDidShow?.remove === 'function') {\n          susbcriptionKeyboardDidShow.remove();\n        }\n\n        if (typeof susbcriptionKeyboardDidHide?.remove === 'function') {\n          susbcriptionKeyboardDidHide.remove();\n        }\n      };\n    }, [onKeyboardDidHide, onKeyboardDidShow]);\n\n    const getValue = useCallback(() => {\n      const defaultValue =\n        typeof value === 'object' ? _.get(value, valueField) : value;\n\n      const getItem = data.filter((e) =>\n        _.isEqual(defaultValue, _.get(e, valueField))\n      );\n\n      if (getItem.length > 0) {\n        setCurrentValue(getItem[0]);\n      } else {\n        setCurrentValue(null);\n      }\n    }, [data, value, valueField]);\n\n    useEffect(() => {\n      getValue();\n    }, [value, data, getValue]);\n\n    const scrollIndex = useCallback(() => {\n      if (autoScroll && data.length > 0 && listData.length === data.length) {\n        setTimeout(() => {\n          if (refList && refList?.current) {\n            const defaultValue =\n              typeof value === 'object' ? _.get(value, valueField) : value;\n\n            const index = _.findIndex(listData, (e: any) =>\n              _.isEqual(defaultValue, _.get(e, valueField))\n            );\n            if (index > -1 && index <= listData.length - 1) {\n              refList?.current?.scrollToIndex({\n                index: index,\n                animated: false,\n              });\n            }\n          }\n        }, 200);\n      }\n    }, [autoScroll, data.length, listData, value, valueField]);\n\n    const showOrClose = useCallback(() => {\n      if (!disable) {\n        if (keyboardHeight > 0 && visible) {\n          return Keyboard.dismiss();\n        }\n\n        _measure();\n        setVisible(!visible);\n        setListData(data);\n\n        if (!visible) {\n          if (onFocus) {\n            onFocus();\n          }\n        } else {\n          if (onBlur) {\n            onBlur();\n          }\n        }\n        if (searchText.length > 0) {\n          onSearch(searchText);\n        }\n        scrollIndex();\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [\n      disable,\n      keyboardHeight,\n      visible,\n      _measure,\n      data,\n      searchText,\n      scrollIndex,\n      onFocus,\n      onBlur,\n    ]);\n\n    const onSearch = useCallback(\n      (text: string) => {\n        if (text.length > 0) {\n          const defaultFilterFunction = (e: any) => {\n            const item = _.get(e, searchField || labelField)\n              ?.toLowerCase()\n              .replace(' ', '')\n              .normalize('NFD')\n              .replace(/[\\u0300-\\u036f]/g, '');\n            const key = text\n              .toLowerCase()\n              .replace(' ', '')\n              .normalize('NFD')\n              .replace(/[\\u0300-\\u036f]/g, '');\n\n            return item.indexOf(key) >= 0;\n          };\n\n          const propSearchFunction = (e: any) => {\n            const labelText = _.get(e, searchField || labelField);\n\n            return searchQuery?.(text, labelText);\n          };\n\n          const dataSearch = data.filter(\n            searchQuery ? propSearchFunction : defaultFilterFunction\n          );\n          setListData(dataSearch);\n        } else {\n          setListData(data);\n        }\n      },\n      [data, searchField, labelField, searchQuery]\n    );\n\n    const onSelect = useCallback(\n      (item: any) => {\n        if (confirmSelectItem && onConfirmSelectItem) {\n          return onConfirmSelectItem(item);\n        }\n\n        if (onChangeText) {\n          setSearchText('');\n          onChangeText('');\n        }\n        onSearch('');\n        setCurrentValue(item);\n        onChange(item);\n        eventClose();\n      },\n      [\n        confirmSelectItem,\n        eventClose,\n        onChange,\n        onChangeText,\n        onConfirmSelectItem,\n        onSearch,\n      ]\n    );\n\n    const _renderDropdown = () => {\n      const isSelected = currentValue && _.get(currentValue, valueField);\n      return (\n        <TouchableWithoutFeedback\n          testID={testID}\n          accessible={!!accessibilityLabel}\n          accessibilityLabel={accessibilityLabel}\n          onPress={showOrClose}\n        >\n          <View style={styles.dropdown}>\n            {renderLeftIcon?.(visible)}\n            <Text\n              style={[\n                styles.textItem,\n                isSelected !== null ? selectedTextStyle : placeholderStyle,\n                font(),\n              ]}\n              {...selectedTextProps}\n            >\n              {isSelected !== null\n                ? _.get(currentValue, labelField)\n                : placeholder}\n            </Text>\n            {renderRightIcon ? (\n              renderRightIcon(visible)\n            ) : (\n              <Image\n                source={ic_down}\n                style={StyleSheet.flatten([\n                  styles.icon,\n                  { tintColor: iconColor },\n                  iconStyle,\n                ])}\n              />\n            )}\n          </View>\n        </TouchableWithoutFeedback>\n      );\n    };\n\n    const _renderItem = useCallback(\n      ({ item, index }: { item: any; index: number }) => {\n        const isSelected = currentValue && _.get(currentValue, valueField);\n        const selected = _.isEqual(_.get(item, valueField), isSelected);\n        _.assign(item, { _index: index });\n        return (\n          <TouchableHighlight\n            key={index.toString()}\n            testID={_.get(item, itemTestIDField || labelField)}\n            accessible={!!accessibilityLabel}\n            accessibilityLabel={_.get(\n              item,\n              itemAccessibilityLabelField || labelField\n            )}\n            underlayColor={activeColor}\n            onPress={() => onSelect(item)}\n          >\n            <View\n              style={StyleSheet.flatten([\n                itemContainerStyle,\n                selected && {\n                  backgroundColor: activeColor,\n                },\n              ])}\n            >\n              {renderItem ? (\n                renderItem(item, selected)\n              ) : (\n                <View style={styles.item}>\n                  <Text\n                    style={StyleSheet.flatten([\n                      styles.textItem,\n                      itemTextStyle,\n                      font(),\n                    ])}\n                  >\n                    {_.get(item, labelField)}\n                  </Text>\n                </View>\n              )}\n            </View>\n          </TouchableHighlight>\n        );\n      },\n      [\n        accessibilityLabel,\n        activeColor,\n        currentValue,\n        font,\n        itemAccessibilityLabelField,\n        itemContainerStyle,\n        itemTestIDField,\n        itemTextStyle,\n        labelField,\n        onSelect,\n        renderItem,\n        valueField,\n      ]\n    );\n\n    const renderSearch = useCallback(() => {\n      if (search) {\n        if (renderInputSearch) {\n          return renderInputSearch((text) => {\n            if (onChangeText) {\n              setSearchText(text);\n              onChangeText(text);\n            }\n            onSearch(text);\n          });\n        } else {\n          return (\n            <CInput\n              testID={testID + ' input'}\n              accessibilityLabel={accessibilityLabel + ' input'}\n              style={[styles.input, inputSearchStyle]}\n              inputStyle={[inputSearchStyle, font()]}\n              value={searchText}\n              autoCorrect={false}\n              placeholder={searchPlaceholder}\n              onChangeText={(e) => {\n                if (onChangeText) {\n                  setSearchText(e);\n                  onChangeText(e);\n                }\n                onSearch(e);\n              }}\n              placeholderTextColor=\"gray\"\n              iconStyle={[{ tintColor: iconColor }, iconStyle]}\n            />\n          );\n        }\n      }\n      return null;\n    }, [\n      accessibilityLabel,\n      font,\n      iconColor,\n      iconStyle,\n      inputSearchStyle,\n      onChangeText,\n      onSearch,\n      renderInputSearch,\n      search,\n      searchPlaceholder,\n      testID,\n      searchText,\n    ]);\n\n    const _renderList = useCallback(\n      (isTopPosition: boolean) => {\n        const isInverted = !inverted ? false : isTopPosition;\n\n        const _renderListHelper = () => {\n          return (\n            <FlatList\n              testID={testID + ' flatlist'}\n              accessibilityLabel={accessibilityLabel + ' flatlist'}\n              {...flatListProps}\n              keyboardShouldPersistTaps=\"handled\"\n              ref={refList}\n              onScrollToIndexFailed={scrollIndex}\n              data={listData}\n              inverted={isTopPosition ? inverted : false}\n              renderItem={_renderItem}\n              keyExtractor={(_item, index) => index.toString()}\n              showsVerticalScrollIndicator={showsVerticalScrollIndicator}\n            />\n          );\n        };\n\n        return (\n          <TouchableWithoutFeedback>\n            <View style={styles.flexShrink}>\n              {isInverted && _renderListHelper()}\n              {renderSearch()}\n              {!isInverted && _renderListHelper()}\n            </View>\n          </TouchableWithoutFeedback>\n        );\n      },\n      [\n        _renderItem,\n        accessibilityLabel,\n        flatListProps,\n        listData,\n        inverted,\n        renderSearch,\n        scrollIndex,\n        showsVerticalScrollIndicator,\n        testID,\n      ]\n    );\n\n    const _renderModal = useCallback(() => {\n      if (visible && position) {\n        const { isFull, width, height, top, bottom, left } = position;\n\n        const onAutoPosition = () => {\n          if (keyboardHeight > 0) {\n            return bottom < keyboardHeight + height;\n          }\n\n          return bottom < (search ? 150 : 100);\n        };\n\n        if (width && top && bottom) {\n          const styleVertical: ViewStyle = {\n            left: left,\n            maxHeight: maxHeight,\n            minHeight: minHeight,\n          };\n          const isTopPosition =\n            dropdownPosition === 'auto'\n              ? onAutoPosition()\n              : dropdownPosition === 'top';\n\n          let keyboardStyle: ViewStyle = {};\n\n          let extendHeight = !isTopPosition ? top : bottom;\n          if (\n            keyboardAvoiding &&\n            keyboardHeight > 0 &&\n            isTopPosition &&\n            dropdownPosition === 'auto'\n          ) {\n            extendHeight = keyboardHeight;\n          }\n\n          return (\n            <Modal\n              transparent\n              statusBarTranslucent\n              visible={visible}\n              supportedOrientations={['landscape', 'portrait']}\n              onRequestClose={showOrClose}\n            >\n              <TouchableWithoutFeedback onPress={showOrClose}>\n                <View\n                  style={StyleSheet.flatten([\n                    styles.flex1,\n                    isFull && styleContainerVertical,\n                    backgroundColor && { backgroundColor: backgroundColor },\n                    keyboardStyle,\n                  ])}\n                >\n                  <View\n                    style={StyleSheet.flatten([\n                      styles.flex1,\n                      {\n                        width,\n                      },\n                      !isTopPosition\n                        ? { paddingTop: extendHeight }\n                        : {\n                            justifyContent: 'flex-end',\n                            paddingBottom: extendHeight,\n                          },\n                      isFull && styles.fullScreen,\n                    ])}\n                  >\n                    <View\n                      style={StyleSheet.flatten([\n                        styles.container,\n                        isFull ? styleHorizontal : styleVertical,\n                        containerStyle,\n                      ])}\n                    >\n                      {_renderList(isTopPosition)}\n                    </View>\n                  </View>\n                </View>\n              </TouchableWithoutFeedback>\n            </Modal>\n          );\n        }\n        return null;\n      }\n      return null;\n    }, [\n      visible,\n      search,\n      position,\n      keyboardHeight,\n      maxHeight,\n      minHeight,\n      dropdownPosition,\n      keyboardAvoiding,\n      showOrClose,\n      styleContainerVertical,\n      backgroundColor,\n      containerStyle,\n      styleHorizontal,\n      _renderList,\n    ]);\n\n    return (\n      <View\n        style={StyleSheet.flatten([styles.mainWrap, style])}\n        ref={ref}\n        onLayout={_measure}\n      >\n        {_renderDropdown()}\n        {_renderModal()}\n      </View>\n    );\n  });\n\nexport default DropdownComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}