{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\simra\\\\travel\\\\src\\\\pages\\\\Location.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Geonames from 'geonames.js';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst geonames = new Geonames({\n  username: 'thalesandrade',\n  lan: 'en',\n  encoding: 'JSON'\n});\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    minWidth: '100%'\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n}));\nexport default function GeoLocation(props) {\n  _s();\n  const classes = useStyles();\n  const {\n    locationTitle,\n    geoId,\n    onChange,\n    isCountry\n  } = props;\n  const [options, setOptions] = useState([]);\n  const [currentItem, setCurrentItem] = useState('');\n  const [labelWidth, setLabelWidth] = useState(0);\n  useEffect(() => {\n    setLabelWidth(inputLabel.current.offsetWidth);\n  }, []);\n  useEffect(() => {\n    try {\n      const data = async () => {\n        (await isCountry) ? geonames.countryInfo({}).then(res => {\n          console.log(res);\n          setOptions(res.geonames);\n        }) : geonames.children({\n          geonameId: geoId\n        }).then(res => {\n          if (res.totalResultsCount) setOptions(res.geonames);\n        });\n      };\n      data();\n    } catch (err) {\n      console.error(err);\n    }\n  }, [geoId, isCountry]);\n  const inputLabel = useRef(null);\n  const handleChange = e => {\n    setCurrentItem(e.target.value);\n    onChange(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(FormControl, {\n    variant: \"outlined\",\n    className: classes.formControl,\n    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n      ref: inputLabel,\n      id: \"demo-simple-select-outlined-label\",\n      children: locationTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      labelId: \"demo-simple-select-outlined-label\",\n      id: \"demo-simple-select-outlined\",\n      value: currentItem,\n      onChange: handleChange,\n      labelWidth: labelWidth,\n      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n        value: \"\",\n        children: /*#__PURE__*/_jsxDEV(\"em\", {\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), options.map((v, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: v.geonameId,\n        children: isCountry ? v.countryName : v.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(GeoLocation, \"nAwrv3/FF8gCvJJbh+ehhou6zEI=\", false, function () {\n  return [useStyles];\n});\n_c = GeoLocation;\nGeoLocation.propTypes = {\n  locationTitle: PropTypes.string,\n  geoId: PropTypes.node,\n  isCountry: PropTypes.bool,\n  onChange: PropTypes.func.isRequired\n};\nGeoLocation.defaultProps = {\n  onChange: undefined\n};\nvar _c;\n$RefreshReg$(_c, \"GeoLocation\");","map":{"version":3,"names":["React","useEffect","useState","useRef","FormControl","InputLabel","MenuItem","Select","makeStyles","Geonames","PropTypes","jsxDEV","_jsxDEV","geonames","username","lan","encoding","useStyles","theme","formControl","minWidth","selectEmpty","marginTop","spacing","GeoLocation","props","_s","classes","locationTitle","geoId","onChange","isCountry","options","setOptions","currentItem","setCurrentItem","labelWidth","setLabelWidth","inputLabel","current","offsetWidth","data","countryInfo","then","res","console","log","children","geonameId","totalResultsCount","err","error","handleChange","e","target","value","variant","className","ref","id","fileName","_jsxFileName","lineNumber","columnNumber","labelId","map","v","index","countryName","name","_c","propTypes","string","node","bool","func","isRequired","defaultProps","undefined","$RefreshReg$"],"sources":["C:/Users/simra/travel/src/pages/Location.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\n\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Geonames from 'geonames.js';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst geonames = new Geonames({\r\n  username: 'thalesandrade',\r\n  lan: 'en',\r\n  encoding: 'JSON',\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    minWidth: '100%',\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function GeoLocation(props) {\r\n  const classes = useStyles();\r\n  const { locationTitle, geoId, onChange, isCountry } = props;\r\n  const [options, setOptions] = useState([]);\r\n  const [currentItem, setCurrentItem] = useState('');\r\n  const [labelWidth, setLabelWidth] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setLabelWidth(inputLabel.current.offsetWidth);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      const data = async () => {\r\n        (await isCountry)\r\n          ? geonames.countryInfo({}).then((res) => {\r\n              console.log(res);\r\n              setOptions(res.geonames);\r\n            })\r\n          : geonames.children({ geonameId: geoId }).then((res) => {\r\n              if (res.totalResultsCount) setOptions(res.geonames);\r\n            });\r\n      };\r\n      data();\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  }, [geoId, isCountry]);\r\n\r\n  const inputLabel = useRef(null);\r\n\r\n  const handleChange = (e) => {\r\n    setCurrentItem(e.target.value);\r\n    onChange(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <FormControl variant=\"outlined\" className={classes.formControl}>\r\n      <InputLabel ref={inputLabel} id=\"demo-simple-select-outlined-label\">\r\n        {locationTitle}\r\n      </InputLabel>\r\n\r\n      <Select\r\n        labelId=\"demo-simple-select-outlined-label\"\r\n        id=\"demo-simple-select-outlined\"\r\n        value={currentItem}\r\n        onChange={handleChange}\r\n        labelWidth={labelWidth}\r\n      >\r\n        <MenuItem value=\"\">\r\n          <em>-</em>\r\n        </MenuItem>\r\n        {options.map((v, index) => (\r\n          <MenuItem key={index} value={v.geonameId}>\r\n            {isCountry ? v.countryName : v.name}\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n}\r\n\r\nGeoLocation.propTypes = {\r\n  locationTitle: PropTypes.string,\r\n  geoId: PropTypes.node,\r\n  isCountry: PropTypes.bool,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nGeoLocation.defaultProps = {\r\n  onChange: undefined,\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}